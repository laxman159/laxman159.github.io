{"mappings":"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","sources":["../../Users/laxma/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/scope-hoisting/lib/helpers.js","../../Users/laxma/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-js/lib/bundle-manifest.js","../../Users/laxma/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/three/examples/jsm/controls/OrbitControls.js","./node_modules/three/examples/jsm/shaders/CopyShader.js","./node_modules/three/examples/jsm/postprocessing/Pass.js","./node_modules/three/examples/jsm/postprocessing/ShaderPass.js","./node_modules/three/examples/jsm/postprocessing/MaskPass.js","./node_modules/three/examples/jsm/postprocessing/EffectComposer.js","./node_modules/three/examples/jsm/postprocessing/RenderPass.js","./js/postprocessing.js","./js/shader/fragment.glsl","./js/shader/fragment1.glsl","./js/shader/vertex.glsl","../../Users/laxma/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-js/lib/bundle-url.js","../../Users/laxma/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-js/lib/relative-path.js","./js/app.js"],"sourcesContent":[null,null,null,"import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","/**\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from '../postprocessing/Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ShaderPass };\n","import { Pass } from '../postprocessing/Pass.js';\n\nclass MaskPass extends Pass {\n\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\nclass ClearMaskPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t}\n\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n","import {\n\tBufferGeometry,\n\tClock,\n\tFloat32BufferAttribute,\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from '../postprocessing/ShaderPass.js';\nimport { MaskPass } from '../postprocessing/MaskPass.js';\nimport { ClearMaskPass } from '../postprocessing/MaskPass.js';\n\nclass EffectComposer {\n\n\tconstructor( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst parameters = {\n\t\t\t\tminFilter: LinearFilter,\n\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\tformat: RGBAFormat\n\t\t\t};\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.renderToScreen = true;\n\n\t\tthis.passes = [];\n\n\t\t// dependencies\n\n\t\tif ( CopyShader === undefined ) {\n\n\t\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t\t}\n\n\t\tif ( ShaderPass === undefined ) {\n\n\t\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t\t}\n\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\n\t\tthis.clock = new Clock();\n\n\t}\n\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n}\n\n\nclass Pass {\n\n\tconstructor() {\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { EffectComposer, Pass, FullScreenQuad };\n","import {\n\tColor\n} from 'three';\nimport { Pass } from '../postprocessing/Pass.js';\n\nclass RenderPass extends Pass {\n\n\tconstructor( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n","/**\r\n * Pixelation shader\r\n */\r\n\r\nvar PostProcessing = {\r\n  uniforms: {\r\n    tDiffuse: { value: null },\r\n    howmuchrgbshifticanhave: { value: 0 },\r\n    resolution: { value: null },\r\n    time: { value: 0 },\r\n    pixelSize: { value: 1 },\r\n  },\r\n\r\n  vertexShader: /* glsl */ `\r\n\t\tvarying highp vec2 vUv;\r\n\t\t\tvoid main() {\r\n\t\t\t\tvUv = uv;\r\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t}`,\r\n\r\n  fragmentShader: /* glsl */ `\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform float pixelSize;\r\n\t\tuniform vec2 resolution;\r\n        uniform float time;\r\n\t\tvarying highp vec2 vUv;\r\n        uniform float howmuchrgbshifticanhave;\r\n        float hash(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\r\n\t\tvoid main(){\r\n            // ..Make black and white\r\n           \r\n            vec2 shift = vec2(0.01,0.01) *howmuchrgbshifticanhave;\r\n            vec4 t  = texture2D(tDiffuse, vUv);\r\n            vec4 t1  = texture2D(tDiffuse, vUv+shift);\r\n            vec4 t2  = texture2D(tDiffuse, vUv-shift);\r\n            \r\n           vec3 color = vec3((t.r + t.b+ t.g)/5.);\r\n           vec3 color1 = vec3((t1.r + t1.b+ t1.g)/5.);\r\n            vec3 color2 = vec3((t2.r + t2.b+ t2.g)/5.);\r\n\r\n            color = vec3(color1.r,color.g,color2.b);\r\n\r\n            float val  = hash(vUv + time)* 0.2;\r\n\r\n\t\t\tvec2 dxy = pixelSize / resolution;\r\n\t\t\tvec2 coord = dxy * floor( vUv / dxy );\r\n\t\t\tgl_FragColor = texture2D(tDiffuse  , vUv);\r\n\t\t\tgl_FragColor = vec4(color + vec3(val), 1.);\r\n     \r\n\t\t\t// gl_FragColor = vec4(color + vec3(val), 1.);\r\n\t\t}`,\r\n};\r\n\r\nexport { PostProcessing };\r\n","varying vec2 vUv;\nuniform sampler2D landscape;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nvarying vec3 vBary;\n\nvec2 hash22(vec2 p) {\n\tp = fract(p * vec2(5.3983, 5.4427));\n    p += dot(p.yx, p.xy +  vec2(21.5351, 14.3137));\n\treturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\n}\nvoid main()\t{\n\n\tvec3 x = dFdx(vNormal);\n\tvec3 y = dFdy(vNormal);\n\tvec3 normal =normalize(cross(x,y));\n\tfloat diffuse = dot(normal,vec3(1.));\n\tvec2 rand = hash22(vec2(floor(diffuse*10.)));\n\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\t// vec2 uv = vUv + 0.1*sin(vUv.x*10.);\n\tvec2 uvv =  vec2(\n\t\tsign(rand.x -0.5)*1. + (rand.x - 0.5)*.6,\n\t\tsign(rand.y -0.5)*1. + (rand.y- 0.5)*.6);\n\n\n\tfloat fresnel =pow(1.+dot(eyeVector,normal), 3.);\n\n\tvec2 uv =uvv*gl_FragCoord.xy/vec2(1000.);\n\t\n\n\tvec3 refracted = refract(eyeVector,normal, 1./3.);\n\tuv+=0.2*refracted.xy;\n\n\n\t\n\tvec4 t  = texture2D(landscape,uv);\n\t// gl_FragColor = vec4(vUv,0.0,1.);\n\tgl_FragColor = t* (1.- fresnel);\n\n\t// gl_FragColor = vec4(vBary,1.);\n\t// gl_FragColor = vec4(diffuse);\n\t// gl_FragColor = vec4(vec3(fresnel),1.);\n\n}","varying vec2 vUv;\nuniform sampler2D landscape;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nvarying vec3 vBary;\n\nvec2 hash22(vec2 p) {\n\tp = fract(p * vec2(5.3983, 5.4427));\n    p += dot(p.yx, p.xy +  vec2(21.5351, 14.3137));\n\treturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\n}\nvoid main()\t{\n\n\n\tfloat width =2.;\n\tvec3 d = fwidth(vBary);\n\tvec3 s = smoothstep(d*(width+ 0.5), d*(width- 0.5), vBary);\n\tfloat line =max(s.x, max(s.y, s.z));\n\tif(line< 0.1){\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4(mix(vec3(1.), vec3(0.), 1. - line),1.);\n\t// gl_FragColor = vec4(diffuse);\n\t// gl_FragColor = vec4(eyeVector,1.);\n\n}","varying vec2 vUv;\nuniform float mouse;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nvarying vec3 vBary;\nuniform float time;\nattribute vec3 aBary;\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\nvoid main() {\n  vUv = uv;\n  vBary = aBary;\n  vNormal =normalize(normalMatrix*normal) ;\n  float noisy =mouse*pow(cnoise(vNormal + time),3.);\n  vec3 newPosition = position +noisy*normal;\n\n  vec4 worldPosition = modelMatrix * vec4(newPosition,1.0);\n  eyeVector = normalize(worldPosition.xyz - cameraPosition);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n}",null,null,"import * as THREE from \"three\";\n// import * as THREE from \"./vendor/three/build/three.module.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\nimport { PostProcessing } from \"./postprocessing.js\";\n\nimport fragment from \"./shader/fragment.glsl\";\nimport fragment1 from \"./shader/fragment1.glsl\";\nimport vertex from \"./shader/vertex.glsl\";\n// import * as dat from \"dat.gui\";\nimport gsap from \"gsap\";\nimport landscape from \"url:../img/island.jpg\";\n\nexport default class Sketch {\n  constructor(options) {\n    this.scene = new THREE.Scene();\n\n    this.container = options.dom;\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0x111111, 1);\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n    // var frustumSize = 10;\n    // var aspect = window.innerWidth / window.innerHeight;\n    // this.camera = new THREE.OrthographicCamera( frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, -1000, 1000 );\n    this.camera.position.set(0, 0, 2);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.time = 0;\n\n    this.isPlaying = true;\n\n    this.mouse = 0;\n\n    this.addObjects();\n    this.mouseEvent();\n    this.addPost();\n    this.resize();\n    this.render();\n    this.setupResize();\n    // this.settings();\n  }\n\n  mouseEvent() {\n    this.lastX = 0;\n    this.lastY = 0;\n    this.speed = 0;\n\n    document.addEventListener(\"mousemove\", (e) => {\n      this.speed =\n        Math.sqrt((e.pageX - this.lastX) ** 2 + (e.pageY - this.lastY) ** 2) *\n        0.08;\n      // console.log(this.speed);\n      this.lastX = e.pageX;\n      this.lastY = e.pageY;\n    });\n  }\n\n  addPost() {\n    this.composer = new EffectComposer(this.renderer);\n    this.composer.addPass(new RenderPass(this.scene, this.camera));\n\n    this.customPass = new ShaderPass(PostProcessing);\n    this.customPass.uniforms[\"resolution\"].value = new THREE.Vector2(\n      window.innerWidth,\n      window.innerHeight\n    );\n    this.customPass.uniforms[\"resolution\"].value.multiplyScalar(\n      window.devicePixelRatio\n    );\n    this.composer.addPass(this.customPass);\n  }\n\n  settings() {\n    let that = this;\n    this.settings = {\n      howmuchrgbshifticanhave: 0.3,\n    };\n    this.gui = new dat.GUI();\n    this.gui.add(this.settings, \"howmuchrgbshifticanhave\", 0, 1, 0.01);\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.composer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    let t = new THREE.TextureLoader().load(landscape);\n    t.wrapS = t.wrapT = THREE.MirroredRepeatWrapping;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        mouse: { type: \"f\", value: 0 },\n        landscape: { value: t },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate1: { value: new THREE.Vector2(1, 1) },\n      },\n      // wireframe: true,\n      // transparent: true,\n      vertexShader: vertex,\n      fragmentShader: fragment,\n    });\n\n    this.material1 = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        mouse: { type: \"f\", value: 0 },\n        landscape: { value: t },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate: { value: new THREE.Vector2(1, 1) },\n      },\n\n      // wireframe: true,\n      // transparent: true,\n      vertexShader: vertex,\n      fragmentShader: fragment1,\n    });\n\n    this.geometry = new THREE.IcosahedronGeometry(1, 1);\n    this.geometry1 = new THREE.IcosahedronBufferGeometry(1, 1);\n\n    let length = this.geometry1.attributes.position.array.length;\n\n    let bary = [];\n    ///\n    for (let i = 0; i < length / 3; i++) {\n      bary.push(0, 0, 1, 0, 1, 0, 1, 0, 0);\n    }\n\n    let aBary = new Float32Array(bary);\n    this.geometry1.setAttribute(\"aBary\", new THREE.BufferAttribute(aBary, 3));\n\n    this.ico = new THREE.Mesh(this.geometry1, this.material);\n    this.icoLines = new THREE.Mesh(this.geometry1, this.material1);\n    this.scene.add(this.ico);\n    this.scene.add(this.icoLines);\n  }\n\n  stop() {\n    this.isPlaying = false;\n  }\n\n  play() {\n    if (!this.isPlaying) {\n      this.render();\n      this.isPlaying = true;\n    }\n  }\n\n  render() {\n    if (!this.isPlaying) return;\n    this.time += 0.001;\n    this.mouse -= (this.mouse - this.speed) * 0.05;\n    this.speed *= 0.99;\n    this.scene.rotation.x = this.time;\n    this.scene.rotation.y = this.time;\n    this.customPass.uniforms.time.value = this.time;\n    this.customPass.uniforms.howmuchrgbshifticanhave.value = this.mouse / 5;\n    this.material.uniforms.time.value = this.time;\n    this.material.uniforms.mouse.value = this.mouse;\n    this.material1.uniforms.mouse.value = this.mouse;\n    this.material1.uniforms.time.value = this.time;\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n    this.composer.render();\n  }\n}\n\nnew Sketch({\n  dom: document.getElementById(\"container\"),\n});\n"],"names":["$parcel$interopDefault","a","__esModule","default","globalThis","self","window","global","$6d8d5515bce92e4ef5153b30a4b126c1$var$mapping","id","resolved","Error","pairs","keys","Object","i","length","JSON","parse","$8ac7ccb51c2f952dcb2886f2e31fb219$var$_changeEvent","type","$8ac7ccb51c2f952dcb2886f2e31fb219$var$_startEvent","$8ac7ccb51c2f952dcb2886f2e31fb219$var$_endEvent","$8ac7ccb51c2f952dcb2886f2e31fb219$export$OrbitControls","$d5b3420140e48d897641d55293bef54b$init","EventDispatcher","constructor","object","domElement","super","undefined","console","warn","document","error","this","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","handleMouseWheel","needsUpdate","code","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","passive","$8cc39cf9b0229684ad00415089ac815b$export$CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","fragmentShader","$0710e18318a51d4b92a9fcbcc850eb47$export$Pass","needsSwap","clear","renderToScreen","setSize","render","$0710e18318a51d4b92a9fcbcc850eb47$var$_camera","$0710e18318a51d4b92a9fcbcc850eb47$var$_geometry","setAttribute","$0710e18318a51d4b92a9fcbcc850eb47$export$FullScreenQuad","material","_mesh","geometry","renderer","$e9e20da272b6bffdf4b823747fb8d1e4$export$ShaderPass","shader","textureID","defines","assign","fsQuad","writeBuffer","readBuffer","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","$09c6aede0d957b3b21103c5d1fcd1ddf$export$MaskPass","scene","camera","inverse","context","getContext","writeValue","clearValue","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","$09c6aede0d957b3b21103c5d1fcd1ddf$export$ClearMaskPass","$6f52b9349524ee96cd2fa7ffe03b370b$export$EffectComposer","renderTarget","parameters","minFilter","magFilter","format","size","getSize","_pixelRatio","getPixelRatio","_width","width","_height","height","name","renderTarget1","renderTarget2","passes","copyPass","clock","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","removePass","indexOf","isLastEnabledPass","passIndex","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","NOTEQUAL","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","$6f52b9349524ee96cd2fa7ffe03b370b$var$_camera","$6f52b9349524ee96cd2fa7ffe03b370b$var$_geometry","$d9bbab7c6465f287c35f6068ab272758$export$RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","_oldClearColor","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","getClearColor","getClearAlpha","setClearColor","$4305983e4ad2264a2571c4f9882d4d2d$export$PostProcessing","howmuchrgbshifticanhave","resolution","time","pixelSize","$a54b130158831b6a8587580df3080653$var$bundleURL","err","matches","stack","match","replace","$a54b130158831b6a8587580df3080653$var$getBundleURL","$b39911345798bcb6e614171afa19459b$var$resolve","$b39911345798bcb6e614171afa19459b$var$dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","$b39911345798bcb6e614171afa19459b$var$relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","apply","join","fromId","toId","_dirname","_relative","options","container","dom","offsetWidth","offsetHeight","devicePixelRatio","antialias","alpha","appendChild","innerWidth","innerHeight","controls","isPlaying","mouse","addObjects","mouseEvent","addPost","resize","setupResize","lastX","lastY","speed","e","composer","customPass","settings","gui","dat","GUI","bind","aspect","t","load","wrapS","wrapT","extensions","derivatives","side","landscape","uvRate1","material1","uvRate","geometry1","attributes","array","bary","aBary","Float32Array","ico","icoLines","stop","play","rotation","requestAnimationFrame","_default","getElementById"],"version":3,"file":"index.360c32af.js.map"}